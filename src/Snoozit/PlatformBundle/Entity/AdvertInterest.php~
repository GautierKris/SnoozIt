<?php

namespace Snoozit\PlatformBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * AdvertInterest
 *
 * @ORM\Table(name="sz_advert_interest")
 * @ORM\Entity(repositoryClass="Snoozit\PlatformBundle\Entity\AdvertInterestRepository")
 */
class AdvertInterest
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var boolean
     *
     * @ORM\Column(name="notification", type="boolean")
     */
    private $notification;

    /**
     * @ORM\ManyToOne(targetEntity="Snoozit\UserBundle\Entity\User")
     */
    private $user;

    /**
     * @ORM\ManyToOne(targetEntity="Snoozit\PlatformBundle\Entity\Advert", inversedBy="interested")
     * @ORM\JoinColumn(name="advert_id", referencedColumnName="id")
     */
    private $advert;

    /**
     * @ORM\Column(name="created", type="datetime")
     * @Gedmo\Timestampable(on="create")
     */
    private $created;

    /**
     * @var \DateTime $updated
     *
     * @ORM\Column(name="updated", type="datetime")
     * @Gedmo\Timestampable(on="update")
     */
    private $updated;

    /**
     * @ORM\ManyToOne(targetEntity="Snoozit\PlatformBundle\Entity\AdvertOptionType")
     */
    private $advertOptionType;

    /**
     * @var boolean
     *
     * @ORM\Column(name="owner_fade", type="boolean")
     */
    private $ownerFade;

    /**
     * @var boolean
     *
     * @ORM\Column(name="customer_fade", type="boolean")
     */
    private $customerFade;

    /**
     * @ORM\OneToMany(targetEntity="Snoozit\PlatformBundle\Entity\sellComment",  mappedBy="advertInterest", cascade={"persist", "remove"})
     * @ORM\OrderBy({ "created" = "desc" })
     */
    protected $sellComments;


    public function __construct()
    {
        $this->notification = true;
        $this->ownerFade = false;
        $this->customerFade = false;
        $this->sellComments = new ArrayCollection();
    }
}
